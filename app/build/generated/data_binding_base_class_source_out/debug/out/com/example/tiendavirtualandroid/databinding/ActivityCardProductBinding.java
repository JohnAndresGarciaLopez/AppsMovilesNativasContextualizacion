// Generated by view binder compiler. Do not edit!
package com.example.tiendavirtualandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tiendavirtualandroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCardProductBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button addProductButton;

  @NonNull
  public final TextView productBrand;

  @NonNull
  public final TextView productDescription;

  @NonNull
  public final ImageView productImage;

  @NonNull
  public final TextView productPrice;

  @NonNull
  public final TextView productTitle;

  @NonNull
  public final TextView productUnit;

  private ActivityCardProductBinding(@NonNull CardView rootView, @NonNull Button addProductButton,
      @NonNull TextView productBrand, @NonNull TextView productDescription,
      @NonNull ImageView productImage, @NonNull TextView productPrice,
      @NonNull TextView productTitle, @NonNull TextView productUnit) {
    this.rootView = rootView;
    this.addProductButton = addProductButton;
    this.productBrand = productBrand;
    this.productDescription = productDescription;
    this.productImage = productImage;
    this.productPrice = productPrice;
    this.productTitle = productTitle;
    this.productUnit = productUnit;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCardProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCardProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_card_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCardProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_product_button;
      Button addProductButton = ViewBindings.findChildViewById(rootView, id);
      if (addProductButton == null) {
        break missingId;
      }

      id = R.id.product_brand;
      TextView productBrand = ViewBindings.findChildViewById(rootView, id);
      if (productBrand == null) {
        break missingId;
      }

      id = R.id.product_description;
      TextView productDescription = ViewBindings.findChildViewById(rootView, id);
      if (productDescription == null) {
        break missingId;
      }

      id = R.id.product_image;
      ImageView productImage = ViewBindings.findChildViewById(rootView, id);
      if (productImage == null) {
        break missingId;
      }

      id = R.id.product_price;
      TextView productPrice = ViewBindings.findChildViewById(rootView, id);
      if (productPrice == null) {
        break missingId;
      }

      id = R.id.product_title;
      TextView productTitle = ViewBindings.findChildViewById(rootView, id);
      if (productTitle == null) {
        break missingId;
      }

      id = R.id.product_unit;
      TextView productUnit = ViewBindings.findChildViewById(rootView, id);
      if (productUnit == null) {
        break missingId;
      }

      return new ActivityCardProductBinding((CardView) rootView, addProductButton, productBrand,
          productDescription, productImage, productPrice, productTitle, productUnit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
